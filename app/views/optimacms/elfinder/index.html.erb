<!DOCTYPE html>
<html>
<head>
  <title>File Manager</title>

  <%= stylesheet_link_tag    'optimacms/elfinder', media: 'all' %>


  <%= javascript_include_tag 'optimacms/elfinder' %>


</head>
<body>

<div id="elfinder"  style="box-sizing: border-box; "></div>


<script type="text/javascript">

    // Detect language (optional)
    var lang = (function() {
        var locq = window.location.search,
            fullLang, locm, lang;
        if (locq && (locm = locq.match(/lang=([a-zA-Z_-]+)/))) {
            // detection by url query (?lang=xx)
            fullLang = locm[1];
        } else {
            // detection by browser language
            fullLang = (navigator.browserLanguage || navigator.language || navigator.userLanguage);
        }
        lang = fullLang.substr(0,2);
        if (lang === 'ja') lang = 'jp';
        else if (lang === 'pt') lang = 'pt_BR';
        else if (lang === 'ug') lang = 'ug_CN';
        else if (lang === 'zh') lang = (fullLang.substr(0,5) === 'zh-TW')? 'zh_TW' : 'zh_CN';
        return lang;
    })();

    var FileBrowserDialogue = {
        init: function() {
            // Here goes your code for setting your custom things onLoad.
        },
        mySubmit: function (URL) {
            // pass selected file path to TinyMCE
            parent.tinymce.activeEditor.windowManager.getParams().setUrl(URL);
            // close popup window
            parent.tinymce.activeEditor.windowManager.close();
        }
    }


    // elFinder options (REQUIRED)
    // Documentation for client options:
    // https://github.com/Studio-42/elFinder/wiki/Client-configuration-options
    var opts = {
        getFileCallback : function(file) {
            // file.url - commandsOptions.getfile.onlyURL = false (default)
            // file     - commandsOptions.getfile.onlyURL = true

            FileBrowserDialogue.mySubmit(file.url);

            // pass selected file data to TinyMCE
            //parent.tinymce.activeEditor.windowManager.getParams().oninsert(file, fm);
            // close popup window
            //parent.tinymce.activeEditor.windowManager.close();

            // pass selected file path to TinyMCE
            //parent.tinymce.activeEditor.windowManager.getParams().setUrl(file.url);
            // close popup window
            //parent.tinymce.activeEditor.windowManager.close();


        },
        transport : new elFinderSupportVer1(),
        resizable : false,
        width : '100%',
        height : '100%',
        url: '/elfinder',  // connector URL
        lang: lang                         // auto detected language (optional)
    };


    $().ready(function() {
        var rails_csrf = {};
        rails_csrf[$('meta[name=csrf-param]').attr('content')] = $('meta[name=csrf-token]').attr('content');


        // load jQueryUI CSS
        //elFinder.prototype.loadCss('//cdnjs.cloudflare.com/ajax/libs/jqueryui/'+uiver+'/themes/smoothness/jquery-ui.css');

        // Optional for Japanese decoder "extras/encoding-japanese.min"
      /*
       if (window.Encoding && Encoding.convert) {
       elFinder.prototype._options.rawStringDecoder = function(s) {
       return Encoding.convert(s,{to:'UNICODE',type:'string'});
       };
       }
       */

        // Make elFinder
        $('#elfinder').elfinder(opts);

    });



</script>


</body>
</html>

