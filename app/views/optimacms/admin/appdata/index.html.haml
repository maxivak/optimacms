#status_commands.bg-info.well

%h1 Application data

- @list.each do |content|
  %h2 #{content['name']}
  Storage:<br>
  #{content['storage']['type']}
  %br
  Dirs: #{content['dirs'].map{|r| r}.join(", ") }
  %br

  - if content['storage']['type']=='git'
    Remote repo: #{content['storage']['remote_repo']}
    %br
    Local cache: #{content['storage']['local_repo_dir']}

  - elsif content['storage']['type']=='ssh'
    ssh server: #{content['storage']['ssh_user']}@#{content['storage']['host']}:#{content['storage']['path']}

  - if content['storage']['type']=='local'
    path: #{content['storage']['path']}


  .commands{data: {name: content['name']}}
    %ul.list-inline
      %li.list-inline-item
        =link_to 'Save', '#', :class=>'btn btn-primary btn-lg', :"data-name"=>'command', :"data-content"=> content['name'], :"data-cmd"=>'save'
      %li.list-inline-item
        =link_to 'Get', '#', :class=>'btn btn-primary btn-lg', :"data-name"=>'command', :"data-content"=> content['name'], :"data-cmd"=>'get'





:javascript
  // commands
  $( '.commands a[data-name="command"]' ).click(function() {
    //$('#status_commands').html("Handler for .click() called." );
    send_command($(this).data('content'), $(this).data('cmd'));
  });

  function send_command(content_name, cmd){
    $('#status_commands').html("Sending...");

    $.ajax({
      url: "/admin/appdata/"+ cmd+"?content="+content_name+"&x="+Math.random(),
      data: {},
      type: "GET",
      dataType: "json",
      contentType: "application/json",
      beforeSend: function(){
        // Handle the beforeSend event
      },
      success: function(res_data){
        $('#status_commands').html("Result: "+res_data.output);
      },
      error: function (xhr, ajaxOptions, thrownError) {
        alert(xhr.status);
        //alert(thrownError);
      },
      complete: function (res_data) {

      }

    });
  }



%h1 Help

%b Save changes
Save current changes to remote repo
* run on server
%pre
  name=NAME RAILS_ENV=#{Rails.env} rake appdata:save

* run from local project
%pre
  cap #{Rails.env} deploy:appdata:server_save

%br
%br


%b Get changes
Get changes from remote repo
%br

or<br>
* run on server
%pre
  name=NAME RAILS_ENV=#{Rails.env} rake appdata:update

* run from local project
%pre
  cap #{Rails.env} deploy:appdata:server_update



%p
  read more:
  =link_to 'Wiki', 'https://github.com/maxivak/rails-tpl/wiki/Synchronize-application-data', target: "_blank"